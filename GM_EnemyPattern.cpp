#include "GM_Enemy.h"
#include "game_body.h"
void CGame_Enemy::Enemy_pattern1(Enemy_SP *enemy)
{

		if(enemy->pattern_process==-1)
		{
		
			enemy->pattern_process=0;
			enemy->count=0;
			enemy->c=enemy->pattern[1];
			//enemy->cc=20;
		}
		if(enemy->pattern_process==0){
			enemy->x+=enemy->pattern_speed;
			enemy->y+=enemy->pattern_speed;
			enemy->count++;
			if(enemy->count>=enemy->c){
				enemy->pattern_process=1;
				enemy->count=0;
			}
		}
		if(enemy->pattern_process==1){
			enemy->x-=enemy->pattern_speed;
			enemy->y+=enemy->pattern_speed;
			enemy->count++;
			if(enemy->count>=enemy->c){
				enemy->pattern_process=2;
				enemy->count=0;
			}
		}
		if(enemy->pattern_process==2){
			enemy->x-=enemy->pattern_speed;
			enemy->y-=enemy->pattern_speed;
			enemy->count++;
			if(enemy->count>=enemy->c){
				enemy->pattern_process=3;
				enemy->count=0;
			}
		}
		if(enemy->pattern_process==3){
			enemy->x+=enemy->pattern_speed;
			enemy->y-=enemy->pattern_speed;
			enemy->count++;
			if(enemy->count>=enemy->c){
				enemy->pattern_process=0;
				enemy->count=0;
			}
		}
}

void CGame_Enemy::Enemy_pattern2(Enemy_SP *enemy)
{
	if(enemy->pattern_process==-1)
	{
			enemy->pattern_process=0;
			enemy->count=0;
			enemy->c=enemy->pattern[1];
			enemy->cc=enemy->c*2;
	}
	if(enemy->pattern_process==0){
		enemy->x+=enemy->pattern_speed;
		enemy->y+=enemy->pattern_speed;
		enemy->count++;
		if(enemy->count>=enemy->c){
			enemy->pattern_process=1;
			enemy->count=0;
		}
	}
	if(enemy->pattern_process==1){
		enemy->x-=enemy->pattern_speed;
		enemy->count++;
		if(enemy->count>=enemy->c){
			enemy->pattern_process=2;
			enemy->count=0;
		}
	}
	if(enemy->pattern_process==2){
		enemy->y+=enemy->pattern_speed;
		enemy->count++;
		if(enemy->count>=enemy->c){
			enemy->pattern_process=3;
			enemy->count=0;
		}
	}
	if(enemy->pattern_process==3){
		enemy->x-=enemy->pattern_speed;
		enemy->y-=enemy->pattern_speed;
		enemy->count++;
		if(enemy->count>=enemy->c){
			enemy->pattern_process=4;
			enemy->count=0;
		}
	}
	if(enemy->pattern_process==4){
		enemy->x+=enemy->pattern_speed;
		enemy->y-=enemy->pattern_speed;
		enemy->count++;
		if(enemy->count>=enemy->c){
			enemy->pattern_process=enemy->pattern_speed;
			enemy->count=0;
		}
	}
	if(enemy->pattern_process==enemy->pattern_speed){
		enemy->y+=enemy->pattern_speed;
		enemy->count++;
		if(enemy->count>=enemy->c){
			enemy->pattern_process=6;
			enemy->count=0;
		}
	}
	if(enemy->pattern_process==6){
		enemy->x-=enemy->pattern_speed;
		enemy->count++;
		if(enemy->count>=enemy->c){
			enemy->pattern_process=7;
			enemy->count=0;
		}
	}
	if(enemy->pattern_process==7){
		enemy->y-=enemy->pattern_speed;
		enemy->count++;
		if(enemy->count>=enemy->c){
			enemy->pattern_process=8;
			enemy->count=0;
		}
	}
	if(enemy->pattern_process==8){
		enemy->x+=enemy->pattern_speed;
		enemy->count++;
		if(enemy->count>=enemy->cc){
			enemy->pattern_process=9;
			enemy->count=0;
		}
	}
	if(enemy->pattern_process==9){
		enemy->y+=enemy->pattern_speed;
		enemy->count++;
		if(enemy->count>=enemy->c){
			enemy->pattern_process=10;
			enemy->count=0;
		}
	}
	if(enemy->pattern_process==10){
		enemy->x-=enemy->pattern_speed;
		enemy->y+=enemy->pattern_speed;
		enemy->count++;
		if(enemy->count>=enemy->c){
			enemy->pattern_process=11;
			enemy->count=0;
		}
	}
	if(enemy->pattern_process==11){
		enemy->x-=enemy->pattern_speed;
		enemy->count++;
		if(enemy->count>=enemy->c){
			enemy->pattern_process=12;
			enemy->count=0;
		}
	}
	if(enemy->pattern_process==12){
		enemy->y-=enemy->pattern_speed;
		enemy->count++;
		if(enemy->count>=enemy->c){
			enemy->pattern_process=13;
			enemy->count=0;
		}
	}
	if(enemy->pattern_process==13){
		enemy->x+=enemy->pattern_speed;
		enemy->y-=enemy->pattern_speed;
		enemy->count++;
		if(enemy->count==enemy->c){
			enemy->pattern_process=0;
			enemy->count=0;
		}
	}

}



void CGame_Enemy::Enemy_pattern3(Enemy_SP *enemy)
{
	if(enemy->pattern_process==-1)
	{
			enemy->pattern_process=0;
			enemy->count=0;
			enemy->c=enemy->pattern[1];
			enemy->cc=enemy->c*2;
	}
	if(enemy->pattern_process==0){
		enemy->x+=enemy->pattern_speed;
		enemy->y+=enemy->pattern_speed;
		enemy->count++;
		if(enemy->count>=enemy->c){
			enemy->pattern_process=1;
			enemy->count=0;
		}
	}
	if(enemy->pattern_process==1){
		enemy->x-=enemy->pattern_speed;
		enemy->y+=enemy->pattern_speed;
		enemy->count++;
		if(enemy->count>=enemy->c){
			enemy->pattern_process=2;
			enemy->count=0;
		}
	}
	if(enemy->pattern_process==2){
		enemy->x-=enemy->pattern_speed;
		enemy->y-=enemy->pattern_speed;
		enemy->count++;
		if(enemy->count>=enemy->c){
			enemy->pattern_process=3;
			enemy->count=0;
		}
	}
	if(enemy->pattern_process==3){
		enemy->x+=enemy->pattern_speed;
		enemy->y-=enemy->pattern_speed;
		enemy->count++;
		if(enemy->count>=enemy->cc){
			enemy->pattern_process=4;
			enemy->count=0;
		}
	}
	if(enemy->pattern_process==4){
		enemy->x-=enemy->pattern_speed;
		enemy->y-=enemy->pattern_speed;
		enemy->count++;
		if(enemy->count>=enemy->c){
			enemy->pattern_process=enemy->pattern_speed;
			enemy->count=0;
		}
	}
	if(enemy->pattern_process==enemy->pattern_speed){
		enemy->x-=enemy->pattern_speed;
		enemy->y+=enemy->pattern_speed;
		enemy->count++;
		if(enemy->count>=enemy->c){
			enemy->pattern_process=6;
			enemy->count=0;
		}
	}
	if(enemy->pattern_process==6){
		enemy->x+=enemy->pattern_speed;
		enemy->y+=enemy->pattern_speed;
		enemy->count++;
		if(enemy->count>=enemy->c){
			enemy->pattern_process=0;
			enemy->count=0;
		}
	}
}

void CGame_Enemy::Enemy_pattern4(Enemy_SP *enemy)
{

		if(enemy->pattern_process==-1)
		{
		
			enemy->pattern_process=0;
			enemy->count=0;
			enemy->c=enemy->pattern[1];
			//enemy->cc=20;
		}
	if(enemy->pattern_process==0){
		enemy->x+=enemy->pattern_speed;
		enemy->y+=enemy->pattern_speed;
		enemy->count++;
		if(enemy->count>=enemy->c){
			enemy->pattern_process=1;
			enemy->count=0;
		}
	}
	if(enemy->pattern_process==1){
		enemy->x-=enemy->pattern_speed;
		enemy->y+=enemy->pattern_speed;
		enemy->count++;
		if(enemy->count>=enemy->c){
			enemy->pattern_process=2;
			enemy->count=0;
		}
	}
	if(enemy->pattern_process==2){
		enemy->x-=enemy->pattern_speed;
		enemy->y-=enemy->pattern_speed;
		enemy->count++;
		if(enemy->count>=enemy->c){
			enemy->pattern_process=3;
			enemy->count=0;
		}
	}
	if(enemy->pattern_process==3){
		enemy->x+=enemy->pattern_speed;
		enemy->y-=enemy->pattern_speed;
		enemy->count++;
		if(enemy->count>=enemy->c*2){
			enemy->pattern_process=4;
			enemy->count=0;
		}
	}
	if(enemy->pattern_process==4){
		enemy->x+=enemy->pattern_speed;
		enemy->y+=enemy->pattern_speed;
		enemy->count++;
		if(enemy->count>=enemy->c){
			enemy->pattern_process=5;
			enemy->count=0;
			}
	}
	if(enemy->pattern_process==5){
		enemy->x-=enemy->pattern_speed;
		enemy->y+=enemy->pattern_speed;
		enemy->count++;
		if(enemy->count>=enemy->c){
			enemy->pattern_process=6;
			enemy->count=0;
		}
	}
	if(enemy->pattern_process==6){
		enemy->x+=enemy->pattern_speed;
		enemy->y+=enemy->pattern_speed;
		enemy->count++;
		if(enemy->count>=enemy->c){
			enemy->pattern_process=7;
			enemy->count=0;
		}
	}
	if(enemy->pattern_process==7){
		enemy->x-=enemy->pattern_speed;
		enemy->y+=enemy->pattern_speed;
		enemy->count++;
		if(enemy->count>=enemy->c){
			enemy->pattern_process=8;
			enemy->count=0;
		}
	}
	if(enemy->pattern_process==8){
		enemy->x-=enemy->pattern_speed;
		enemy->y-=enemy->pattern_speed;
		enemy->count++;
		if(enemy->count>=enemy->c){
			enemy->pattern_process=9;
			enemy->count=0;
		}
	}
	if(enemy->pattern_process==9){
		enemy->x-=enemy->pattern_speed;
		enemy->y+=enemy->pattern_speed;
		enemy->count++;
		if(enemy->count>=enemy->c){
			enemy->pattern_process=10;
			enemy->count=0;
		}
	}
	if(enemy->pattern_process==10){
		enemy->x-=enemy->pattern_speed;
		enemy->y-=enemy->pattern_speed;
		enemy->count++;
		if(enemy->count>=enemy->c){
			enemy->pattern_process=11;
			enemy->count=0;
		}
	}
	if(enemy->pattern_process==11){
		enemy->x+=enemy->pattern_speed;
		enemy->y-=enemy->pattern_speed;
		enemy->count++;
		if(enemy->count>=enemy->c){
			enemy->pattern_process=12;
			enemy->count=0;
		}
	}
	if(enemy->pattern_process==12){
		enemy->x-=enemy->pattern_speed;
		enemy->y-=enemy->pattern_speed;
		enemy->count++;
		if(enemy->count>=enemy->c){
			enemy->pattern_process=13;
			enemy->count=0;
		}
	}
	if(enemy->pattern_process==13){
		enemy->x+=enemy->pattern_speed;
		enemy->y-=enemy->pattern_speed;
		enemy->count++;
		if(enemy->count>=enemy->c){
			enemy->pattern_process=14;
			enemy->count=0;
		}
	}
	if(enemy->pattern_process==14){
		enemy->x+=enemy->pattern_speed;
		enemy->y+=enemy->pattern_speed;
		enemy->count++;
		if(enemy->count>=enemy->c){
			enemy->pattern_process=0;
			enemy->count=0;
		}
	}
}


void CGame_Enemy::Enemy_pattern5(Enemy_SP *enemy)
{

		if(enemy->pattern_process==-1)
		{
		
			enemy->pattern_process=0;
			enemy->count=0;
			enemy->c=enemy->pattern[1];
			//enemy->cc=20;
		}
	if(enemy->pattern_process==0){
		enemy->y-=enemy->pattern_speed;
		enemy->count++;
		if(enemy->count>=enemy->c){
			enemy->pattern_process=1;
			enemy->count=0;
		}
	}
	if(enemy->pattern_process==1){
		enemy->x+=enemy->pattern_speed;
		enemy->count++;
		if(enemy->count>=enemy->c){
			enemy->pattern_process=2;
			enemy->count=0;
		}
	}
	if(enemy->pattern_process==2){
		enemy->y+=enemy->pattern_speed;
		enemy->count++;
		if(enemy->count>=enemy->c*2){
			enemy->pattern_process=3;
			enemy->count=0;
		}
	}
	if(enemy->pattern_process==3){
		enemy->x-=enemy->pattern_speed;
		enemy->count++;
		if(enemy->count>=enemy->c*2){
			enemy->pattern_process=4;
			enemy->count=0;
		}
	}
	if(enemy->pattern_process==4){
		enemy->y-=enemy->pattern_speed;
		enemy->count++;
		if(enemy->count>=enemy->c*3){
			enemy->pattern_process=5;
			enemy->count=0;
		}
	}
	if(enemy->pattern_process==5){
		enemy->x+=enemy->pattern_speed;
		enemy->count++;
		if(enemy->count>=enemy->c*3){
			enemy->pattern_process=6;
			enemy->count=0;
		}
	}
	if(enemy->pattern_process==6){
		enemy->y+=enemy->pattern_speed;
		enemy->count++;
		if(enemy->count>=enemy->c*3){
			enemy->pattern_process=7;
			enemy->count=0;
		}
	}
	if(enemy->pattern_process==7){
		enemy->y-=enemy->pattern_speed;
		enemy->count++;
		if(enemy->count>=enemy->c*3){
			enemy->pattern_process=8;
			enemy->count=0;
		}
	}
	if(enemy->pattern_process==8){
		enemy->x-=enemy->pattern_speed;
		enemy->count++;
		if(enemy->count>=enemy->c*3){
			enemy->pattern_process=9;
			enemy->count=0;
		}
	}
	if(enemy->pattern_process==9){
		enemy->y+=enemy->pattern_speed;
		enemy->count++;
		if(enemy->count>=enemy->c*3){
			enemy->pattern_process=10;
			enemy->count=0;
		}
	}
	if(enemy->pattern_process==10){
		enemy->x+=enemy->pattern_speed;
		enemy->count++;
		if(enemy->count>=enemy->c*2){
			enemy->pattern_process=11;
			enemy->count=0;
		}
	}
	if(enemy->pattern_process==11){
		enemy->y-=enemy->pattern_speed;
		enemy->count++;
		if(enemy->count>=enemy->c*2){
			enemy->pattern_process=12;
			enemy->count=0;
		}
	}
	if(enemy->pattern_process==12){
		enemy->x-=enemy->pattern_speed;
		enemy->count++;
		if(enemy->count>=enemy->c){
			enemy->pattern_process=13;
			enemy->count=0;
		}
	}
	if(enemy->pattern_process==13){
		enemy->y+=enemy->pattern_speed;
		enemy->count++;
		if(enemy->count>=enemy->c){
			enemy->pattern_process=0;
			enemy->count=0;
		}
	}
}
